{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manchaudhary/Desktop/Nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetailPage = function MeetupDetailPage(_ref) {\n  var meetupData = _ref.meetupData;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: meetupData.image,\n      title: meetupData.title,\n      address: meetupData.address,\n      description: meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetailPage;\nexport var __N_SSG = true;\nexport default MeetupDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailPage\");","map":{"version":3,"sources":["/Users/manchaudhary/Desktop/Nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetailPage","meetupData","image","title","address","description"],"mappings":";;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC3C,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,UAAU,CAACC,KADpB;AAEE,MAAA,KAAK,EAAED,UAAU,CAACE,KAFpB;AAGE,MAAA,OAAO,EAAEF,UAAU,CAACG,OAHtB;AAIE,MAAA,WAAW,EAAEH,UAAU,CAACI;AAJ1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAXD;;KAAML,gB;;AA4DN,eAAeA,gBAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nconst MeetupDetailPage = ({ meetupData }) => {\n  return (\n    <Fragment>\n      <MeetupDetail\n        image={meetupData.image}\n        title={meetupData.title}\n        address={meetupData.address}\n        description={meetupData.description}\n      />\n    </Fragment>\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin:root@cluster0.raa4l.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin:root@cluster0.raa4l.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n      },\n    },\n  };\n}\n\nexport default MeetupDetailPage;\n"]},"metadata":{},"sourceType":"module"}