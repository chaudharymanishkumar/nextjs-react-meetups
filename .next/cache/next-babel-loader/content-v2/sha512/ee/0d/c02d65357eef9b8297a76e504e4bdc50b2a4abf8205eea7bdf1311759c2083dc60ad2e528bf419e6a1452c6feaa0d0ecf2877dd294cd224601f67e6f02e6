{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// import { useEffect, useState } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/2560px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some Address 5, 1234 Some city\",\n  description: \"This is a First Meetup\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/2560px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some Address 10, 1234 Some city\",\n  description: \"This is a second Meetup\"\n}];\n\nconst HomePage = props => {\n  //   const [loadedMeetups, setLoadedMeetups] = useState([]);\n  //   useEffect(() => {\n  //     //fetch meetups from API\n  //     setLoadedMeetups(DUMMY_MEETUPS);\n  //   }, []);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetup\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"A portal for react meetups\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n}; // export async function getServerSideProps(context) {\n//   // for every request to server, it regenerates pre-rendered page\n//   // it is prefered to use when data changes multiple times within sec\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from API\n  const client = await MongoClient.connect(\"mongodb+srv://admin:root@cluster0.raa4l.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10 // it is used to set the frequency of pre-rendered page generation on server where application is deployed here it is 10 secs\n\n  };\n}\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}